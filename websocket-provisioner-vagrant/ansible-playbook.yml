---
- name: Playbook
  hosts: all
  become: true
  vars:
    websocket_provisioner_ws_endpoint: "{{ lookup('ansible.builtin.env', 'APP_WS_ENDPOINT') }}"
    websocket_provisioner_ws_auth_token: "{{ lookup('ansible.builtin.env', 'APP_WS_AUTH_TOKEN') }}"
    websocket_provisioner_dir: "{{ lookup('ansible.builtin.env', 'APP_DIR') | default('/opt/websocket-provisioner-client', true) }}"
    service_code: "{{ lookup('ansible.builtin.env', 'SERVICE_CODE') | default('app-client', true) }}"
    service_name: "{{ lookup('ansible.builtin.env', 'SERVICE_NAME') | default('Websocket provision client', true) }}"
  tasks:
    - name: APT - install
      apt:
        update_cache: true
        cache_valid_time: 86400 # One day
        name:
          - dmidecode
          - ansible
          - git
          - openssh-client

    - name: SSH Key - Generate
      ansible.builtin.shell: "ssh-keygen -q -t ed25519 -C \"root@${HOSTNAME}\" -f /root/.ssh/id_ed25519 -N ''"
      args:
        executable: /bin/bash
        creates: /root/.ssh/id_ed25519

    - name: App client - system service - stop service, if it is running
      ansible.builtin.service:
        name: "{{ service_code }}"
        daemon_reload: true
        enabled: false
        state: stopped
      ignore_errors: true

    - name: App client - directory
      become: true
      ansible.builtin.file:
        path: "{{ websocket_provisioner_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0600

    - name: App client - app - copy
      ansible.builtin.copy:
        src: dist/websocket-provisioner-client-unix
        dest: "{{ websocket_provisioner_dir }}/websocket-provisioner-client-unix"
        owner: root
        group: root
        mode: 0770

    - name: App client - update script - copy
      ansible.builtin.copy:
        src: websocket-provisioner-run.sh
        dest: "{{ websocket_provisioner_dir }}/websocket-provisioner-run.sh"
        owner: root
        group: root
        mode: 0770

    - name: App client - system service - file content
      ansible.builtin.copy:
        content: |
          [Unit]
          Description={{ service_name }}
          After=network-online.target

          [Service]
          User=root
          WorkingDirectory={{ websocket_provisioner_dir }}
          ExecStart={{ websocket_provisioner_dir }}/websocket-provisioner-client-unix
          RestartSec=3
          Restart=always
          Environment="WS_ENDPOINT={{ websocket_provisioner_ws_endpoint }}"
          Environment="WS_AUTH_TOKEN={{ websocket_provisioner_ws_auth_token }}"
          Environment="RUN_SCRIPT={{ websocket_provisioner_dir }}/websocket-provisioner-run.sh"
          Environment="DETAIL_CMD_1_HOSTNAME=bash -c 'echo -n ${HOSTNAME}'"
          Environment="DETAIL_CMD_2_HARDWARE_ID=dmidecode -s system-uuid"
          Environment="DETAIL_CMD_3_HARDWARE_SERIAL=dmidecode -s system-serial-number"
          Environment="DETAIL_CMD_4_BIOS_VENDOR=dmidecode -s bios-vendor"
          Environment="DETAIL_CMD_5_PUBLIC_KEY=cat /root/.ssh/id_ed25519.pub"
    
          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/{{ service_code }}.service
        group: root
        owner: root
        mode: 0644

    - name: App client - system service - start
      ansible.builtin.service:
        name: "{{ service_code }}"
        daemon_reload: true
        enabled: true
        state: started
